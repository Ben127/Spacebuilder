@{
    //获取输入网址 //正则过滤列表页面 
    string url = Request.QueryString.GetString("url", string.Empty);
    
    string videoId = "";
    //生成本站短网址
    ParsedMedia entity = ParsedMedia.New();
    entity.MediaType = MediaType.Video;
    entity.Url = url;

    
    string playListVideoIdRexString = @"^http://v.youku.com/v_playlist/f(?<videoid>[a-zA-Z\d=]+).html$";
    Regex videoRex = new Regex(playListVideoIdRexString, RegexOptions.IgnoreCase);
    Match videoMatch = videoRex.Match(url);

    if (videoMatch.Success)
    {
        string webMetter1 = HttpCollects.GetHTMLContent(url, "var videoId2= '(?<videoId>[a-zA-Z0-9]+)';");
        Regex videoIdRegex = new Regex("var videoId2= '(?<videoId>[a-zA-Z0-9]+)';", RegexOptions.IgnoreCase);
        Match videoIdMatch = videoIdRegex.Match(webMetter1);
        if (videoIdMatch.Success)
        {
            url = string.Format(@"http://v.youku.com/v_show/id_{0}.html", videoIdMatch.Groups["videoId"].Value);
            videoId = videoIdMatch.Groups["videoId"].Value;
        }
    }
    
    string playerUrlVideoIdRexString = @"^http://player.youku.com/player.php/sid/(?<videoId>[a-zA-Z\d=]+)/v.swf$";
    videoRex = new Regex(playerUrlVideoIdRexString, RegexOptions.IgnoreCase);
    videoMatch = videoRex.Match(url);
    if (videoMatch.Success)
    {
        url = string.Format(@"http://v.youku.com/v_show/id_{0}.html", videoMatch.Groups["videoId"].Value);
    }
    //正则过滤播放页面
    string videoIdRexString = @"^http://v.youku.com/v_show/id_(?<videoId>[a-zA-Z\d=]+)[\s\S]*$";

    videoRex = new Regex(videoIdRexString, RegexOptions.IgnoreCase);
    videoMatch = videoRex.Match(url);
    if (videoMatch.Success)
    {
        //url = url.Remove(url.ToLower().IndexOf(".html"));
        
        entity.PlayerUrl = string.Format(@"http://player.youku.com/player.php/sid/{0}&isAutoPlay=true/v.swf", videoMatch.Groups["videoId"].Value);
        videoId = videoMatch.Groups["videoId"].Value;
        // 推荐添加第二个参数
        string webMetter = HttpCollects.GetHTMLContent(url, @"<h1 class=""title"">(?<title>[\s\S]*?)</h1>");
        
       

        //匹配标题
        string titleRexString = @"<h1 class=""title"">(?<title>[\s\S]*?)</h1>";
        videoRex = new Regex(titleRexString, RegexOptions.IgnoreCase);
        videoMatch = videoRex.Match(webMetter);
        if (videoMatch.Success)
        {
            entity.Name = HtmlUtility.StripHtml(videoMatch.Groups["title"].Value, true, false);
            if (!string.IsNullOrEmpty(entity.Name))
            {
                entity.Name = entity.Name.Replace("\r\n", string.Empty).Replace("\t", string.Empty).Replace(" ", string.Empty);
            }
            entity.Name = StringUtility.Trim(entity.Name, 30);
        }

        //匹配缩略图
        
        //方法一
        string thumbnailUrlWebMetter = HttpCollects.GetHTMLContent(string.Format("https://openapi.youku.com/v2/videos/show.json?client_id=60d136ba791db73a&video_id={0}", videoId));
        Newtonsoft.Json.JsonReader reader = new Newtonsoft.Json.JsonTextReader(new StringReader(thumbnailUrlWebMetter));
        while (reader.Read())
        {
            if (reader.Value != null && reader.Value.ToString() == "thumbnail")
            {
                reader.Read();
                entity.ThumbnailUrl = reader.Value.ToString();
                break;
            }
        }
        
        //string thumbnailUrlWebMetter = HttpCollects.GetHTMLContent(string.Format("http://v.youku.com/player/getPlayList/VideoIDS/{0}/timezone/+08/version/5/source/out?password=&ran=2513&n=3", videoId));
        //Newtonsoft.Json.JsonReader reader = new Newtonsoft.Json.JsonTextReader(new StringReader(thumbnailUrlWebMetter));
        //while (reader.Read())
        //{
        //    if (reader.Value != null && reader.Value.ToString() == "logo")
        //    {
        //        reader.Read();
        //        entity.ThumbnailUrl = reader.Value.ToString();
        //        break;
        //    }
        //}
        entity.Description = HttpCollects.GetDescription(webMetter, true);
        ParsedMediaService parsedMediaService = new ParsedMediaService();
        parsedMediaService.Create(entity);
    }
}
@Html.Raw(Json.Encode(entity))
